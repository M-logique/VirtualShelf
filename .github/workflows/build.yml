name: Build and test

on: 
  workflow_call:
    inputs:
      name:
        description: 'The name of the binary'
        required: true
        type: string

jobs: 
  build:
    name: Build binaries
    runs-on: ${{ matrix.config.build-os }}

    permissions:
      contents: read  # Minimal required permissions

    strategy:
      fail-fast: false
      matrix:
        config:
          - { build-os: "ubuntu-latest", build-slot: "linux-x86_64",   inf: "linux-amd64" }
          - { build-os: "ubuntu-latest", build-slot: "linux-aarch64",  inf: "linux-arm64" }
          - { build-os: "ubuntu-latest", build-slot: "win-x86_64",     inf: "win-amd64"   }
          - { build-os: "ubuntu-latest", build-slot: "win-aarch64",    inf: "win-arm64"   }
          - { build-os: "ubuntu-latest", build-slot: "darwin-x86_64",  inf: "darwin-amd64"}    
          - { build-os: "macos-latest",  build-slot: "darwin-aarch64", inf: "darwin-arm64"}    

    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{github.workspace}}/libtui/go.mod
    
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'


      - name: Install CMake
        uses: ssrobins/install-cmake@v1
        with:
          version: '3.25.1'

      - name: Setup Google test
        uses: Bacondish2023/setup-googletest@v1
        with:
          tag: v1.14.0


      
      - name: Install MinGW (x86_64)
        if: matrix.config.build-slot == 'win-x86_64'
        run: | 
          sudo apt install mingw-w64-tools -y
          sudo apt install mingw-w64 -y

      - name: Install MinGW (aarch64)
        if: matrix.config.build-slot == 'win-aarch64'
        run: |
          git clone https://github.com/Windows-on-ARM-Experiments/mingw-woarm64-build.git
          cd mingw-woarm64-build
          export TOOLCHAIN_PATH=/usr/bin/aarch64-w64-mingw32
          sudo ./build.sh
      
      
      
      - name: Install aarch64 building tools
        if: matrix.config.build-slot == 'linux-aarch64'
        run: sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Verify Go installation
        run: go version

      - name: Verify CMake installation
        run: cmake --version

      - name: Build project and test
        run: 
          python3 ${{ github.workspace }}/.github/builder.py -o ./dist -s ${{matrix.config.build-slot}} --test

      - name: Rename binary
        run: 
          python3 .github/rename.py ./dist
        env: 
          INF: ${{matrix.config.inf}}
          NAME: ${{inputs.name}}

      - name: Upload Binary artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{inputs.name}}-${{ matrix.config.inf }}.bin
          path: dist/